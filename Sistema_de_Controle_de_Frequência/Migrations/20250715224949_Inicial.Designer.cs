// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sistema_de_Controle_de_Frequência.Data;

#nullable disable

namespace SistemaDeControleDeFrequencia.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250715224949_Inicial")]
    partial class Inicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Sistema_de_Controle_de_Frequência.Models.Frequencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataEnvio")
                        .HasColumnType("datetime2");

                    b.Property<string>("MesReferencia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SetorId")
                        .HasColumnType("int");

                    b.Property<int>("StatusFrequenciaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SetorId");

                    b.HasIndex("StatusFrequenciaId");

                    b.ToTable("Frequencia", (string)null);
                });

            modelBuilder.Entity("Sistema_de_Controle_de_Frequência.Models.FrequenciaServidor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FrequenciaId")
                        .HasColumnType("int");

                    b.Property<int>("ServidorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FrequenciaId");

                    b.HasIndex("ServidorId");

                    b.ToTable("Frequencia_Servidor", (string)null);
                });

            modelBuilder.Entity("Sistema_de_Controle_de_Frequência.Models.Nucleo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Nucleo", (string)null);
                });

            modelBuilder.Entity("Sistema_de_Controle_de_Frequência.Models.Servidor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Matricula")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SetorId")
                        .HasColumnType("int");

                    b.Property<int>("id_setor")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SetorId");

                    b.ToTable("Servidor", (string)null);
                });

            modelBuilder.Entity("Sistema_de_Controle_de_Frequência.Models.Setor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NucleoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NucleoId");

                    b.ToTable("Setor", (string)null);
                });

            modelBuilder.Entity("Sistema_de_Controle_de_Frequência.Models.StatusFrequencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Status_Frequencia", (string)null);
                });

            modelBuilder.Entity("Sistema_de_Controle_de_Frequência.Models.Frequencia", b =>
                {
                    b.HasOne("Sistema_de_Controle_de_Frequência.Models.Setor", "Setor")
                        .WithMany("Frequencias")
                        .HasForeignKey("SetorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sistema_de_Controle_de_Frequência.Models.StatusFrequencia", "StatusFrequencia")
                        .WithMany("Frequencias")
                        .HasForeignKey("StatusFrequenciaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Setor");

                    b.Navigation("StatusFrequencia");
                });

            modelBuilder.Entity("Sistema_de_Controle_de_Frequência.Models.FrequenciaServidor", b =>
                {
                    b.HasOne("Sistema_de_Controle_de_Frequência.Models.Frequencia", "Frequencia")
                        .WithMany("FrequenciasServidores")
                        .HasForeignKey("FrequenciaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Sistema_de_Controle_de_Frequência.Models.Servidor", "Servidor")
                        .WithMany("FrequenciasServidores")
                        .HasForeignKey("ServidorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Frequencia");

                    b.Navigation("Servidor");
                });

            modelBuilder.Entity("Sistema_de_Controle_de_Frequência.Models.Servidor", b =>
                {
                    b.HasOne("Sistema_de_Controle_de_Frequência.Models.Setor", "Setor")
                        .WithMany("Servidores")
                        .HasForeignKey("SetorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Setor");
                });

            modelBuilder.Entity("Sistema_de_Controle_de_Frequência.Models.Setor", b =>
                {
                    b.HasOne("Sistema_de_Controle_de_Frequência.Models.Nucleo", "Nucleo")
                        .WithMany("Setores")
                        .HasForeignKey("NucleoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Nucleo");
                });

            modelBuilder.Entity("Sistema_de_Controle_de_Frequência.Models.Frequencia", b =>
                {
                    b.Navigation("FrequenciasServidores");
                });

            modelBuilder.Entity("Sistema_de_Controle_de_Frequência.Models.Nucleo", b =>
                {
                    b.Navigation("Setores");
                });

            modelBuilder.Entity("Sistema_de_Controle_de_Frequência.Models.Servidor", b =>
                {
                    b.Navigation("FrequenciasServidores");
                });

            modelBuilder.Entity("Sistema_de_Controle_de_Frequência.Models.Setor", b =>
                {
                    b.Navigation("Frequencias");

                    b.Navigation("Servidores");
                });

            modelBuilder.Entity("Sistema_de_Controle_de_Frequência.Models.StatusFrequencia", b =>
                {
                    b.Navigation("Frequencias");
                });
#pragma warning restore 612, 618
        }
    }
}
